# Exercise 2

# Each shape in exercise 1 can be generated by one of the two functions below.
# Shapes 1-5 can be generated through the equalPolygon function.
# Shapes 6 & 7 can be generated by the specialShape function.

from turtle import *

def equalPolygon():

    sides = 1

    while sides:
        sides = int(input("Enter the number of sides.  Enter '0' to quit: "))
        # Entering a string will break the function, and there's no good "easy" way around this.
        # The type function isn't practical because the input is ALWAYS a string first.
        # It's impractical to check if the string can be converted to a number type.
        # An error message will always be given first.
        # I'll take any suggestions for an "efficient" way to address this.

        if sides > 0:
            innerAngle = (360 / int(sides))

            up()
            forward(50)
            left(90)
            forward(50)
            left(90)
            down()

            for i in range(sides):
                forward(100)
                left(innerAngle)

            return mainloop()

        elif sides == 0:
            break
        else:
            print("That's not a valid input.")


def specialShape():
    
    shape = 1

    while shape:
        shape = (input("Enter a shape.  Enter 'O' for options.  Enter 'Q' to quit: ")).upper()
        if shape == 'STAR' or shape == '1':

            up()
            forward(50)
            left(90)
            forward(50)
            left(90)
            down()

            for i in range(5):
                forward(100)
                left(126)
                forward(100)
                right(54)
            return mainloop()

        elif shape == 'CIRCLE' or shape == '2':

            up()
            forward(50)
            left(90)
            forward(50)
            left(90)
            down()

            circle(100)
            return mainloop()

        elif shape == 'O':
            print("The options are:\n1. Star\n2. Circle")
        elif shape == 'Q':
            break
        else:
            print("That's not a valid option.")


# Test the functions by "uncommenting" either function below.

# equalPolygon()

# specialShape()